# Dokploy Docker Compose configuration
# Docker Raw compatible - downloads code from GitHub

networks:
  household-planet:
    driver: bridge

services:
  backend:
    build:
      context: .
      dockerfile_inline: |
        FROM node:18-alpine
        WORKDIR /app
        
        # Install git and download source (cache bust: 2025-01-18-18:10)
        RUN apk add --no-cache git
        RUN git clone https://github.com/jackjacevo/household-planet-kenya.git /tmp/source
        
        # Copy backend files
        RUN cp -r /tmp/source/household-planet-backend/* .
        
        # Install dependencies
        RUN npm ci --only=production
        
        # Generate Prisma client
        RUN npx prisma generate
        
        # Create uploads directory
        RUN mkdir -p uploads
        
        # Clean up
        RUN rm -rf /tmp/source
        
        EXPOSE 3001
        
        CMD ["npm", "run", "start:prod"]
    restart: unless-stopped
    networks:
      - household-planet
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: file:./dev.db
      JWT_SECRET: ${JWT_SECRET:-a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6}
      JWT_EXPIRES_IN: 7d
      CORS_ORIGIN: https://householdplanetkenya.co.ke
      BASE_URL: http://backend:3001
      FRONTEND_URL: https://householdplanetkenya.co.ke
      MPESA_CONSUMER_KEY: ${MPESA_CONSUMER_KEY}
      MPESA_CONSUMER_SECRET: ${MPESA_CONSUMER_SECRET}
      MPESA_PASSKEY: ${MPESA_PASSKEY}
      MPESA_BASE_URL: https://api.safaricom.co.ke
      MPESA_CALLBACK_URL: https://householdplanetkenya.co.ke/api/payments/mpesa/callback
      MPESA_SHORTCODE: 174379
      MPESA_ENVIRONMENT: sandbox
      SESSION_SECRET: household-planet-session-secret-2024
    expose:
      - "3001"
    volumes:
      - uploads_data:/app/uploads
    healthcheck:
      test: ["CMD", "sh", "-c", "ps aux | grep '[n]ode' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: .
      dockerfile_inline: |
        FROM node:18-alpine AS builder
        WORKDIR /app
        
        # Install git and download source (cache bust: 2025-01-18-18:10)
        RUN apk add --no-cache git
        RUN git clone https://github.com/jackjacevo/household-planet-kenya.git /tmp/source
        
        # Copy frontend files
        RUN cp -r /tmp/source/household-planet-frontend/* .
        
        # Remove problematic sitemap route if it exists
        RUN rm -rf src/app/sitemap.xml || true
        
        # Install dependencies
        RUN npm ci
        
        # Build args
        ARG NEXT_PUBLIC_API_URL=https://householdplanetkenya.co.ke/api
        ARG NEXT_PUBLIC_SITE_URL=https://householdplanetkenya.co.ke
        ARG NEXT_PUBLIC_ENVIRONMENT=production
        
        ENV NEXT_PUBLIC_API_URL=$NEXT_PUBLIC_API_URL
        ENV NEXT_PUBLIC_SITE_URL=$NEXT_PUBLIC_SITE_URL
        ENV NEXT_PUBLIC_ENVIRONMENT=$NEXT_PUBLIC_ENVIRONMENT
        
        RUN npm run build
        
        FROM node:18-alpine AS runner
        WORKDIR /app
        
        ENV NODE_ENV=production
        
        RUN addgroup --system --gid 1001 nodejs
        RUN adduser --system --uid 1001 nextjs
        
        COPY --from=builder /app/public ./public
        COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
        COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static
        
        USER nextjs
        
        EXPOSE 3000
        
        ENV PORT=3000
        ENV HOSTNAME="0.0.0.0"
        
        CMD ["node", "server.js"]
      args:
        NEXT_PUBLIC_API_URL: https://householdplanetkenya.co.ke/api
        NEXT_PUBLIC_SITE_URL: https://householdplanetkenya.co.ke
        NEXT_PUBLIC_ENVIRONMENT: production
    restart: unless-stopped
    networks:
      - household-planet
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: https://householdplanetkenya.co.ke/api
      NEXT_PUBLIC_SITE_URL: https://householdplanetkenya.co.ke
      NEXT_PUBLIC_ENVIRONMENT: production
    depends_on:
      - backend
    expose:
      - "3000"
    volumes:
      - uploads_data:/app/uploads

volumes:
  uploads_data:
    driver: local