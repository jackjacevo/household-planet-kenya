# Dokploy-specific Docker Compose configuration
# This avoids port conflicts by letting Dokploy handle port assignment

networks:
  household-planet:
    driver: bridge

services:
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    networks:
      - household-planet
    environment:
      POSTGRES_DB: household_planet
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: your_secure_password_123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    command: >
      postgres
      -c log_statement=all
      -c log_destination=stderr
      -c logging_collector=on
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./household-planet-backend
      dockerfile: Dockerfile.prod
    restart: unless-stopped
    networks:
      - household-planet
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://postgres:your_secure_password_123@postgres:5432/household_planet
      JWT_SECRET: ${JWT_SECRET:-a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6}
      JWT_EXPIRES_IN: 7d
      CORS_ORIGIN: https://householdplanetkenya.co.ke
      BASE_URL: http://backend:3001
      MPESA_CONSUMER_KEY: ${MPESA_CONSUMER_KEY}
      MPESA_CONSUMER_SECRET: ${MPESA_CONSUMER_SECRET}
      MPESA_PASSKEY: ${MPESA_PASSKEY}
      MPESA_BASE_URL: https://api.safaricom.co.ke
      MPESA_CALLBACK_URL: https://householdplanetkenya.co.ke/api/payments/mpesa/callback
      MPESA_SHORTCODE: 174379
      MPESA_ENVIRONMENT: sandbox
      SESSION_SECRET: household-planet-session-secret-2024
    depends_on:
      postgres:
        condition: service_healthy
    # No external ports - only internal access
    expose:
      - "3001"
    volumes:
      - uploads_data:/app/uploads
    healthcheck:
      test: ["CMD", "sh", "-c", "ps aux | grep '[n]ode' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./household-planet-frontend
      dockerfile: Dockerfile.prod
      args:
        NEXT_PUBLIC_API_URL: https://householdplanetkenya.co.ke/api
        NEXT_PUBLIC_SITE_URL: https://householdplanetkenya.co.ke
        NEXT_PUBLIC_ENVIRONMENT: production
    restart: unless-stopped
    networks:
      - household-planet
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: https://householdplanetkenya.co.ke/api
      NEXT_PUBLIC_SITE_URL: https://householdplanetkenya.co.ke
      NEXT_PUBLIC_ENVIRONMENT: production
    depends_on:
      - backend
    # Let Dokploy assign the port automatically
    expose:
      - "3000"
    volumes:
      - uploads_data:/app/uploads

volumes:
  postgres_data:
    driver: local
  uploads_data:
    driver: local