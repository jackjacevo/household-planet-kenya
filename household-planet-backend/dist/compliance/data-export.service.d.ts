import { PrismaService } from '../prisma/prisma.service';
export declare class DataExportService {
    private prisma;
    constructor(prisma: PrismaService);
    exportUserData(userId: number): Promise<{
        fileName: string;
        filePath: string;
        data: {
            personalData: {
                id: string;
                email: string;
                firstName: string;
                lastName: string;
                phone: string;
                dateOfBirth: Date;
                createdAt: Date;
                updatedAt: Date;
            };
            addresses: {
                phone: string;
                id: string;
                createdAt: Date;
                updatedAt: Date;
                userId: string;
                type: string;
                fullName: string;
                county: string;
                town: string;
                street: string;
                landmark: string | null;
                isDefault: boolean;
            }[];
            orders: {
                id: string;
                orderNumber: string;
                status: string;
                total: number;
                createdAt: Date;
                items: ({
                    product: {
                        name: string;
                        id: string;
                        slug: string;
                        sku: string;
                        description: string | null;
                        shortDescription: string | null;
                        price: number;
                        comparePrice: number | null;
                        weight: number | null;
                        dimensions: string | null;
                        images: string | null;
                        categoryId: string;
                        brandId: string | null;
                        isActive: boolean;
                        isFeatured: boolean;
                        seoTitle: string | null;
                        seoDescription: string | null;
                        metaDescription: string | null;
                        tags: string | null;
                        keywords: string | null;
                        stock: number;
                        lowStockThreshold: number;
                        trackInventory: boolean;
                        averageRating: number | null;
                        totalReviews: number;
                        viewCount: number;
                        searchKeywords: string | null;
                        relatedProducts: string | null;
                        ageRestricted: boolean;
                        minimumAge: number | null;
                        warrantyPeriod: string | null;
                        warrantyType: string | null;
                        warrantyTerms: string | null;
                        geographicRestrictions: string | null;
                        restrictedRegions: string | null;
                        createdAt: Date;
                        updatedAt: Date;
                    };
                } & {
                    id: string;
                    price: number;
                    productId: string;
                    variantId: string | null;
                    quantity: number;
                    orderId: string;
                    total: number;
                })[];
                payments: {
                    id: string;
                    createdAt: Date;
                    updatedAt: Date;
                    phoneNumber: string;
                    status: string;
                    orderId: string;
                    failureReason: string | null;
                    paymentMethod: string;
                    checkoutRequestId: string;
                    merchantRequestId: string | null;
                    amount: number;
                    mpesaReceiptNumber: string | null;
                    transactionDate: Date | null;
                }[];
            }[];
            cart: ({
                product: {
                    name: string;
                    id: string;
                    slug: string;
                    sku: string;
                    description: string | null;
                    shortDescription: string | null;
                    price: number;
                    comparePrice: number | null;
                    weight: number | null;
                    dimensions: string | null;
                    images: string | null;
                    categoryId: string;
                    brandId: string | null;
                    isActive: boolean;
                    isFeatured: boolean;
                    seoTitle: string | null;
                    seoDescription: string | null;
                    metaDescription: string | null;
                    tags: string | null;
                    keywords: string | null;
                    stock: number;
                    lowStockThreshold: number;
                    trackInventory: boolean;
                    averageRating: number | null;
                    totalReviews: number;
                    viewCount: number;
                    searchKeywords: string | null;
                    relatedProducts: string | null;
                    ageRestricted: boolean;
                    minimumAge: number | null;
                    warrantyPeriod: string | null;
                    warrantyType: string | null;
                    warrantyTerms: string | null;
                    geographicRestrictions: string | null;
                    restrictedRegions: string | null;
                    createdAt: Date;
                    updatedAt: Date;
                };
            } & {
                id: string;
                createdAt: Date;
                productId: string;
                userId: string;
                variantId: string | null;
                quantity: number;
            })[];
            reviews: ({
                product: {
                    name: string;
                    id: string;
                    slug: string;
                    sku: string;
                    description: string | null;
                    shortDescription: string | null;
                    price: number;
                    comparePrice: number | null;
                    weight: number | null;
                    dimensions: string | null;
                    images: string | null;
                    categoryId: string;
                    brandId: string | null;
                    isActive: boolean;
                    isFeatured: boolean;
                    seoTitle: string | null;
                    seoDescription: string | null;
                    metaDescription: string | null;
                    tags: string | null;
                    keywords: string | null;
                    stock: number;
                    lowStockThreshold: number;
                    trackInventory: boolean;
                    averageRating: number | null;
                    totalReviews: number;
                    viewCount: number;
                    searchKeywords: string | null;
                    relatedProducts: string | null;
                    ageRestricted: boolean;
                    minimumAge: number | null;
                    warrantyPeriod: string | null;
                    warrantyType: string | null;
                    warrantyTerms: string | null;
                    geographicRestrictions: string | null;
                    restrictedRegions: string | null;
                    createdAt: Date;
                    updatedAt: Date;
                };
            } & {
                id: string;
                images: string | null;
                createdAt: Date;
                updatedAt: Date;
                productId: string;
                userId: string;
                rating: number;
                title: string | null;
                comment: string | null;
                isVerified: boolean;
                isHelpful: number;
            })[];
            consents: {
                id: string;
                userId: string;
                type: string;
                timestamp: Date;
                granted: boolean;
                grantedAt: Date;
            }[];
            cookieConsents: {
                id: string;
                sessionId: string;
                analytics: boolean;
                timestamp: Date;
                necessary: boolean;
                marketing: boolean;
                preferences: boolean;
            }[];
        };
    }>;
    getExportHistory(userId: number): Promise<{
        id: string;
        userId: string;
        status: string;
        completedAt: Date | null;
        requestedAt: Date;
        downloadUrl: string | null;
        fileName: string | null;
    }[]>;
    cleanupOldExports(): Promise<void>;
}
