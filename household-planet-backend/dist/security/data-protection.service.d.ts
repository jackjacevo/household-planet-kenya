import { PrismaService } from '../prisma/prisma.service';
import { EncryptionService } from './encryption.service';
export declare class DataProtectionService {
    private prisma;
    private encryptionService;
    constructor(prisma: PrismaService, encryptionService: EncryptionService);
    classifyAndProtectData(data: any, classification: 'PUBLIC' | 'INTERNAL' | 'CONFIDENTIAL' | 'RESTRICTED'): Promise<any>;
    private encryptAllFields;
    private encryptSensitiveFields;
    private hashIdentifiableFields;
    anonymizeUserData(userId: string): Promise<any>;
    private getAgeRange;
    private getLocationRegion;
    maskSensitiveData(data: any, fields: string[]): any;
    private maskEmail;
    private maskPhone;
    private maskCardNumber;
    private maskGeneric;
    enforceDataRetention(): Promise<void>;
    secureDelete(table: string, id: string): Promise<void>;
    detectDataBreach(suspiciousActivity: any): Promise<boolean>;
    private handleDataBreach;
    private activateBreachResponse;
    private notifyAuthorities;
    generateDataProtectionReport(): Promise<any>;
    private countEncryptedRecords;
    private countAnonymizedRecords;
    private checkRetentionCompliance;
    private countBreachIncidents;
    private countDataSubjectRequests;
}
