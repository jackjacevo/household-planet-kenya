import { PrismaService } from '../../prisma/prisma.service';
export declare class RecommendationsService {
    private prisma;
    constructor(prisma: PrismaService);
    getRecommendations(productId: string, userId?: string | number, limit?: number): Promise<{
        images: any;
        tags: any;
        recommendationType: string;
        score: number;
        category: {
            name: string;
            id: string;
            slug: string;
            description: string | null;
            isActive: boolean;
            metaDescription: string | null;
            image: string | null;
            parentId: string | null;
            sortOrder: number;
        };
        variants: {
            name: string;
            id: string;
            sku: string;
            price: number;
            isActive: boolean;
            stock: number;
            lowStockThreshold: number;
            productId: string;
            attributes: string | null;
            size: string | null;
            color: string | null;
            material: string | null;
        }[];
        name: string;
        id: string;
        slug: string;
        sku: string;
        description: string | null;
        shortDescription: string | null;
        price: number;
        comparePrice: number | null;
        weight: number | null;
        dimensions: string | null;
        categoryId: string;
        brandId: string | null;
        isActive: boolean;
        isFeatured: boolean;
        seoTitle: string | null;
        seoDescription: string | null;
        metaDescription: string | null;
        keywords: string | null;
        stock: number;
        lowStockThreshold: number;
        trackInventory: boolean;
        averageRating: number | null;
        totalReviews: number;
        viewCount: number;
        searchKeywords: string | null;
        relatedProducts: string | null;
        ageRestricted: boolean;
        minimumAge: number | null;
        warrantyPeriod: string | null;
        warrantyType: string | null;
        warrantyTerms: string | null;
        geographicRestrictions: string | null;
        restrictedRegions: string | null;
        createdAt: Date;
        updatedAt: Date;
    }[]>;
    getRelatedProducts(productId: string, limit?: number): Promise<{
        images: any;
        tags: any;
        category: {
            name: string;
            id: string;
            slug: string;
            description: string | null;
            isActive: boolean;
            metaDescription: string | null;
            image: string | null;
            parentId: string | null;
            sortOrder: number;
        };
        variants: {
            name: string;
            id: string;
            sku: string;
            price: number;
            isActive: boolean;
            stock: number;
            lowStockThreshold: number;
            productId: string;
            attributes: string | null;
            size: string | null;
            color: string | null;
            material: string | null;
        }[];
        name: string;
        id: string;
        slug: string;
        sku: string;
        description: string | null;
        shortDescription: string | null;
        price: number;
        comparePrice: number | null;
        weight: number | null;
        dimensions: string | null;
        categoryId: string;
        brandId: string | null;
        isActive: boolean;
        isFeatured: boolean;
        seoTitle: string | null;
        seoDescription: string | null;
        metaDescription: string | null;
        keywords: string | null;
        stock: number;
        lowStockThreshold: number;
        trackInventory: boolean;
        averageRating: number | null;
        totalReviews: number;
        viewCount: number;
        searchKeywords: string | null;
        relatedProducts: string | null;
        ageRestricted: boolean;
        minimumAge: number | null;
        warrantyPeriod: string | null;
        warrantyType: string | null;
        warrantyTerms: string | null;
        geographicRestrictions: string | null;
        restrictedRegions: string | null;
        createdAt: Date;
        updatedAt: Date;
    }[]>;
    getRecentlyViewed(userId: string | number, limit?: number): Promise<{
        images: any;
        tags: any;
        viewedAt: Date;
        category: {
            name: string;
            id: string;
            slug: string;
            description: string | null;
            isActive: boolean;
            metaDescription: string | null;
            image: string | null;
            parentId: string | null;
            sortOrder: number;
        };
        variants: {
            name: string;
            id: string;
            sku: string;
            price: number;
            isActive: boolean;
            stock: number;
            lowStockThreshold: number;
            productId: string;
            attributes: string | null;
            size: string | null;
            color: string | null;
            material: string | null;
        }[];
        name: string;
        id: string;
        slug: string;
        sku: string;
        description: string | null;
        shortDescription: string | null;
        price: number;
        comparePrice: number | null;
        weight: number | null;
        dimensions: string | null;
        categoryId: string;
        brandId: string | null;
        isActive: boolean;
        isFeatured: boolean;
        seoTitle: string | null;
        seoDescription: string | null;
        metaDescription: string | null;
        keywords: string | null;
        stock: number;
        lowStockThreshold: number;
        trackInventory: boolean;
        averageRating: number | null;
        totalReviews: number;
        viewCount: number;
        searchKeywords: string | null;
        relatedProducts: string | null;
        ageRestricted: boolean;
        minimumAge: number | null;
        warrantyPeriod: string | null;
        warrantyType: string | null;
        warrantyTerms: string | null;
        geographicRestrictions: string | null;
        restrictedRegions: string | null;
        createdAt: Date;
        updatedAt: Date;
    }[]>;
    trackProductView(productId: string, userId?: string | number): Promise<void>;
    generateRecommendations(): Promise<void>;
}
