import { PrismaService } from '../../prisma/prisma.service';
export declare class InventoryService {
    private prisma;
    constructor(prisma: PrismaService);
    updateStock(productId: string, variantId: string | null, quantity: number, operation: 'add' | 'subtract'): Promise<{
        name: string;
        id: string;
        slug: string;
        sku: string;
        description: string | null;
        shortDescription: string | null;
        price: number;
        comparePrice: number | null;
        weight: number | null;
        dimensions: string | null;
        images: string | null;
        categoryId: string;
        brandId: string | null;
        isActive: boolean;
        isFeatured: boolean;
        seoTitle: string | null;
        seoDescription: string | null;
        tags: string | null;
        stock: number;
        lowStockThreshold: number;
        trackInventory: boolean;
        averageRating: number | null;
        totalReviews: number;
        viewCount: number;
        searchKeywords: string | null;
        relatedProducts: string | null;
        createdAt: Date;
        updatedAt: Date;
    } | {
        name: string;
        id: string;
        sku: string;
        price: number;
        isActive: boolean;
        stock: number;
        lowStockThreshold: number;
        productId: string;
        attributes: string | null;
        size: string | null;
        color: string | null;
        material: string | null;
    }>;
    checkLowStock(productId?: string, variantId?: string): Promise<void>;
    private createInventoryAlert;
    getInventoryAlerts(isRead?: boolean): Promise<{
        id: string;
        createdAt: Date;
        productId: string | null;
        variantId: string | null;
        message: string;
        type: string;
        isRead: boolean;
    }[]>;
    markAlertAsRead(alertId: string): Promise<{
        id: string;
        createdAt: Date;
        productId: string | null;
        variantId: string | null;
        message: string;
        type: string;
        isRead: boolean;
    }>;
    getLowStockProducts(): Promise<{
        products: {
            images: any;
            category: {
                name: string;
                id: string;
                slug: string;
                description: string | null;
                isActive: boolean;
                image: string | null;
                parentId: string | null;
                sortOrder: number;
            };
            name: string;
            id: string;
            slug: string;
            sku: string;
            description: string | null;
            shortDescription: string | null;
            price: number;
            comparePrice: number | null;
            weight: number | null;
            dimensions: string | null;
            categoryId: string;
            brandId: string | null;
            isActive: boolean;
            isFeatured: boolean;
            seoTitle: string | null;
            seoDescription: string | null;
            tags: string | null;
            stock: number;
            lowStockThreshold: number;
            trackInventory: boolean;
            averageRating: number | null;
            totalReviews: number;
            viewCount: number;
            searchKeywords: string | null;
            relatedProducts: string | null;
            createdAt: Date;
            updatedAt: Date;
        }[];
        variants: {
            product: {
                images: any;
                category: {
                    name: string;
                    id: string;
                    slug: string;
                    description: string | null;
                    isActive: boolean;
                    image: string | null;
                    parentId: string | null;
                    sortOrder: number;
                };
                name: string;
                id: string;
                slug: string;
                sku: string;
                description: string | null;
                shortDescription: string | null;
                price: number;
                comparePrice: number | null;
                weight: number | null;
                dimensions: string | null;
                categoryId: string;
                brandId: string | null;
                isActive: boolean;
                isFeatured: boolean;
                seoTitle: string | null;
                seoDescription: string | null;
                tags: string | null;
                stock: number;
                lowStockThreshold: number;
                trackInventory: boolean;
                averageRating: number | null;
                totalReviews: number;
                viewCount: number;
                searchKeywords: string | null;
                relatedProducts: string | null;
                createdAt: Date;
                updatedAt: Date;
            };
            name: string;
            id: string;
            sku: string;
            price: number;
            isActive: boolean;
            stock: number;
            lowStockThreshold: number;
            productId: string;
            attributes: string | null;
            size: string | null;
            color: string | null;
            material: string | null;
        }[];
    }>;
    checkAllInventoryLevels(): Promise<void>;
}
