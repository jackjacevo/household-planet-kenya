import { PrismaService } from '../prisma/prisma.service';
export declare class BlogService {
    private prisma;
    constructor(prisma: PrismaService);
    createPost(data: {
        title: string;
        slug: string;
        content: string;
        excerpt?: string;
        seoTitle?: string;
        seoDescription?: string;
        tags?: string;
        featuredImage?: string;
        authorId?: string;
        status?: string;
    }): Promise<{
        id: string;
        slug: string;
        seoTitle: string | null;
        seoDescription: string | null;
        tags: string | null;
        viewCount: number;
        createdAt: Date;
        updatedAt: Date;
        status: string;
        title: string;
        content: string;
        excerpt: string | null;
        featuredImage: string | null;
        publishedAt: Date | null;
        authorId: string | null;
    }>;
    getPosts(params: {
        skip?: number;
        take?: number;
        status?: string;
    }): Promise<{
        id: string;
        slug: string;
        seoTitle: string | null;
        seoDescription: string | null;
        tags: string | null;
        viewCount: number;
        createdAt: Date;
        updatedAt: Date;
        status: string;
        title: string;
        content: string;
        excerpt: string | null;
        featuredImage: string | null;
        publishedAt: Date | null;
        authorId: string | null;
    }[]>;
    getPostBySlug(slug: string): Promise<{
        id: string;
        slug: string;
        seoTitle: string | null;
        seoDescription: string | null;
        tags: string | null;
        viewCount: number;
        createdAt: Date;
        updatedAt: Date;
        status: string;
        title: string;
        content: string;
        excerpt: string | null;
        featuredImage: string | null;
        publishedAt: Date | null;
        authorId: string | null;
    }>;
    updatePost(id: string, data: any): Promise<{
        id: string;
        slug: string;
        seoTitle: string | null;
        seoDescription: string | null;
        tags: string | null;
        viewCount: number;
        createdAt: Date;
        updatedAt: Date;
        status: string;
        title: string;
        content: string;
        excerpt: string | null;
        featuredImage: string | null;
        publishedAt: Date | null;
        authorId: string | null;
    }>;
    deletePost(id: string): Promise<{
        id: string;
        slug: string;
        seoTitle: string | null;
        seoDescription: string | null;
        tags: string | null;
        viewCount: number;
        createdAt: Date;
        updatedAt: Date;
        status: string;
        title: string;
        content: string;
        excerpt: string | null;
        featuredImage: string | null;
        publishedAt: Date | null;
        authorId: string | null;
    }>;
    getRelatedPosts(postId: string, limit?: number): Promise<{
        id: string;
        slug: string;
        seoTitle: string | null;
        seoDescription: string | null;
        tags: string | null;
        viewCount: number;
        createdAt: Date;
        updatedAt: Date;
        status: string;
        title: string;
        content: string;
        excerpt: string | null;
        featuredImage: string | null;
        publishedAt: Date | null;
        authorId: string | null;
    }[]>;
}
