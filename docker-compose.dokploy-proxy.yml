# Dokploy Docker Compose with Nginx Proxy
networks:
  household-planet:
    driver: bridge

services:
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    networks:
      - household-planet
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend

  backend:
    build:
      context: .
      dockerfile_inline: |
        FROM node:20-alpine AS base
        WORKDIR /app
        
        RUN apk add --no-cache git openssl wget
        RUN git clone --depth 1 https://github.com/jackjacevo/household-planet-kenya.git /tmp/source
        RUN cp -r /tmp/source/household-planet-backend/* .
        
        RUN npm ci
        RUN npx prisma generate
        RUN npm run build
        RUN npx prisma db push || true
        
        RUN addgroup --system --gid 1001 nodejs
        RUN adduser --system --uid 1001 nestjs
        RUN mkdir -p uploads && chown -R nestjs:nodejs uploads
        
        RUN rm -rf /tmp/source
        RUN npm prune --production
        
        USER nestjs
        EXPOSE 3001
        
        CMD ["node", "dist/src/main.js"]
    restart: unless-stopped
    networks:
      - household-planet
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: file:./dev.db
      JWT_SECRET: ${JWT_SECRET:-household-planet-jwt-secret-key-2024}
      JWT_EXPIRES_IN: 7d
      CORS_ORIGIN: https://householdplanetkenya.co.ke
      BASE_URL: http://backend:3001
      FRONTEND_URL: https://householdplanetkenya.co.ke
      MPESA_CONSUMER_KEY: ${MPESA_CONSUMER_KEY}
      MPESA_CONSUMER_SECRET: ${MPESA_CONSUMER_SECRET}
      MPESA_PASSKEY: ${MPESA_PASSKEY}
      MPESA_BASE_URL: https://api.safaricom.co.ke
      MPESA_CALLBACK_URL: https://householdplanetkenya.co.ke/api/payments/mpesa/callback
      MPESA_SHORTCODE: 174379
      MPESA_ENVIRONMENT: production
      SESSION_SECRET: household-planet-session-secret-2024
    expose:
      - "3001"
    volumes:
      - uploads_data:/app/uploads
      - database_data:/app

  frontend:
    build:
      context: .
      dockerfile_inline: |
        FROM node:20-alpine AS builder
        WORKDIR /app
        
        RUN apk add --no-cache git
        RUN git clone --depth 1 https://github.com/jackjacevo/household-planet-kenya.git /tmp/source
        RUN cp -r /tmp/source/household-planet-frontend/* .
        
        RUN npm ci
        
        ENV NEXT_PUBLIC_API_URL=/api
        ENV NEXT_PUBLIC_SITE_URL=https://householdplanetkenya.co.ke
        ENV NEXT_PUBLIC_ENVIRONMENT=production
        
        RUN npm run build
        
        FROM node:20-alpine AS runner
        WORKDIR /app
        
        ENV NODE_ENV=production
        
        RUN addgroup --system --gid 1001 nodejs
        RUN adduser --system --uid 1001 nextjs
        
        COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
        COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static
        COPY --from=builder --chown=nextjs:nodejs /app/public ./public
        
        USER nextjs
        EXPOSE 3000
        
        ENV PORT=3000
        ENV HOSTNAME="0.0.0.0"
        
        CMD ["node", "server.js"]
    restart: unless-stopped
    networks:
      - household-planet
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: /api
      NEXT_PUBLIC_SITE_URL: https://householdplanetkenya.co.ke
      NEXT_PUBLIC_ENVIRONMENT: production
    depends_on:
      - backend
    expose:
      - "3000"

volumes:
  uploads_data:
    driver: local
  database_data:
    driver: local