version: '3.8'

networks:
  app-network:
    driver: bridge

services:
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    networks:
      - app-network
    environment:
      POSTGRES_DB: household_planet
      POSTGRES_USER: ${POSTGRES_USER:-household_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_password_123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-household_user}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./household-planet-backend
      dockerfile: Dockerfile.prod
    restart: unless-stopped
    networks:
      - app-network
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://${POSTGRES_USER:-household_user}:${POSTGRES_PASSWORD:-secure_password_123}@postgres:5432/household_planet
      JWT_SECRET: ${JWT_SECRET:-household-planet-jwt-secret-key-2024-production-secure}
      JWT_EXPIRES_IN: 7d
      CORS_ORIGIN: ${FRONTEND_URL:-http://localhost:3000}
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "3001:3001"
    volumes:
      - uploads_data:/app/uploads
    # healthcheck:
    #   test: ["CMD", "node", "healthcheck.js"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 40s

  frontend:
    build:
      context: ./household-planet-frontend
      dockerfile: Dockerfile.prod
    restart: unless-stopped
    networks:
      - app-network
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: https://householdplanet.co.ke
      NEXT_PUBLIC_SITE_URL: https://householdplanet.co.ke
    depends_on:
      - backend
    ports:
      - "3000:3000"

volumes:
  postgres_data:
  uploads_data: